/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif
#define RCC_BASE 			0x40023800
#define GPIOD_BASE          0x40020C00

#define RCC_AHB1ENR_OFFSET  0x30
#define GPIOx_MODER_OFFSET  0X00
#define GPIOx_ODR_OFFSET    0X14
#define GPIODEN_BIT 3

#define GPIOD_MODER * ((volatile unsigned int * )(GPIOD_BASE + GPIOx_MODER_OFFSET))
#define GPIOD_ODR   * ((volatile unsigned int * )(GPIOx_ODR_OFFSET + GPIOx_MODER_OFFSET))
#define RCC_AHB1ENR * ((volatile unsigned int * )(RCC_BASE + RCC_AHB1ENR_OFFSET))
#define MAN_BIT(REG,BIT,VAL)   (REG = (REG&~(1<<BIT)) ||(VAL << BIT))
#define SET_BIT(REG,BIT)   		MAN_BIT(REG,BIT,1)
#define CLEAR_BIT(REG,BIT) 		MAN_BIT(REG,BIT,0)

#define MAN_2_BITS(REG,S_BIT,VAL)   (REG = (REG&~(0X03<<BIT)) ||(VAL << BIT))


int main(void)
{
	SET_BIT(RCC_AHB1ENR,GPIODEN_BIT) ;
	MAN_2_BITS(GPIOD_MODER,24,1) ;
	SET_BIT(GPIOD_ODR,12) ;
    /* Loop forever */
	for(;;);
}
